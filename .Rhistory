library(ggplot2)
R = 10 #Radius
wid = 6 #Width
dis = 1 #Distance between red and blue
N = 2000 #Numbers
i = 0
x1=c()
x2=c()
d=c()
while(i < N/2){
xi = runif(1,-R-wid/2,R+wid/2); xj = runif(1,0,R+wid/2)
r = sqrt(xi*xi+xj*xj)
if(R+wid/2 >= r && R-wid/2 <= r){
i=i+1
x1[i]=xi; x2[i]=xj; d[i]=-1
}
}#Red
while(i < N){
xi = runif(1,-wid/2,2*R+wid/2); xj = runif(1,-dis-R-wid,-dis)
r = sqrt((xi-R)*(xi-R)+(xj+dis)*(xj+dis))
if(R+wid/2 >= r && R-wid/2 <= r){
i=i+1
x1[i]=xi; x2[i]=xj; d[i]=1
}
}#Blue
rndodr = order(runif(N))
x1=x1[rndodr]
x2=x2[rndodr]
d=d[rndodr]
qplot(x1,x2,color=factor(d))#visulization
p = as.matrix(data.frame(x1,x2))
R = 10 #Radius
wid = 6 #Width
dis = -1 #Distance between red and blue
N = 2000 #Numbers
i = 0
x1=c()
x2=c()
d=c()
while(i < N/2){
xi = runif(1,-R-wid/2,R+wid/2); xj = runif(1,0,R+wid/2)
r = sqrt(xi*xi+xj*xj)
if(R+wid/2 >= r && R-wid/2 <= r){
i=i+1
x1[i]=xi; x2[i]=xj; d[i]=-1
}
}#Red
while(i < N){
xi = runif(1,-wid/2,2*R+wid/2); xj = runif(1,-dis-R-wid,-dis)
r = sqrt((xi-R)*(xi-R)+(xj+dis)*(xj+dis))
if(R+wid/2 >= r && R-wid/2 <= r){
i=i+1
x1[i]=xi; x2[i]=xj; d[i]=1
}
}#Blue
rndodr = order(runif(N))
x1=x1[rndodr]
x2=x2[rndodr]
d=d[rndodr]
qplot(x1,x2,color=factor(d))#visulization
p = as.matrix(data.frame(x1,x2))
W = c(0,0) #Weight Matrix
b = 0 #bias
eta = 0.5 #learning rate
n = 5000       #Iteration
MSE = c()    #Mean Square error
for(i in 1:n){
k = (i-1) %% 4 + 1
y = W[1]*x1[k] + W[2]*x2[k] + b
e = d[k] - y
MSE[i] = e**2
W[1] = W[1] + 2 * eta * e * x1[k]
W[2] = W[2] + 2 * eta * e * x2[k]
b = b + 2 * eta * e
}
plot(MSE,type='l',xlab='iteration') #Plot
